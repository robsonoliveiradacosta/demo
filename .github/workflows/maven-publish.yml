name: Java CI

on:
  push:
    branches: [ main ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ main ]

jobs:
  ci_cd:
    name: CI / CD
    runs-on: ubuntu-latest
    env:
      PROJECT: demo
      TAG: latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build with Maven
        run: mvn package

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.PROJECT }}:${{ env.TAG }}

      - name: Build and Push to Github Docker Registry
        id: github_docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: docker.pkg.github.com/${{ github.repository }}/${{ env.PROJECT }}:${{ env.TAG }}

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_KEY }}
          port: ${{ secrets.DO_PORT }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.PROJECT }}:${{ env.TAG }}
            docker rm -f ${{ env.PROJECT }}-app
            docker run -d -p 80:8080 --name ${{ env.PROJECT }}-app ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.PROJECT }}:${{ env.TAG }}
            docker image prune -af
